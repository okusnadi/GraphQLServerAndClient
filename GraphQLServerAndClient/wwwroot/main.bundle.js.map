{"version":3,"sources":["C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/$_lazy_route_resource lazy","C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.css","C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.html","C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.ts","C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.module.ts","C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/clientGraphql/gqlQueryClientAndProduct.ts","C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/clientGraphql/gqlQueryClients.ts","C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/environments/environment.ts","C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,+F;;;;;;;ACVA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wSAAwS,kBAAkB,uB;;;;;;;;;;;;;;;;;;;;;;ACAxQ;AACV;AAKsC;AAClB;AAO5D;IAIE,sBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAHlC,UAAK,GAAG,KAAK,CAAC;IAGwB,CAAC;IAEvC,+BAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YACpC,KAAK,EAAE,+EAAY;SACpB,CAAC,CAAC,YAAY,CAAC;QAEhB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YACrB,KAAK,EAAE,wFAAqB;YAC5B,SAAS,EAAE;gBACT,QAAQ,EAAE,GAAG;gBACb,MAAM,EAAE,GAAG;aACZ;SACF,CAAC,CAAC,YAAY;aACZ,SAAS,CAAC,UAAC,EAAQ;gBAAN,cAAI;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IArBU,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAK4B,8DAAM;OAJvB,YAAY,CAsBxB;IAAD,mBAAC;CAAA;AAtBwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACdiC;AACjB;AACe;AACF;AACc;AACd;AAEP;AAgB/C;IACE,mBACE,MAAc,EACd,QAAkB;QAElB,MAAM,CAAC,MAAM,CAAC;YACZ,mDAAmD;YACnD,uCAAuC;YACvC,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,iCAAiC,EAAE,CAAC;YACjE,KAAK,EAAE,IAAI,4EAAa,EAAE;SAC3B,CAAC,CAAC;IACL,CAAC;IAXU,SAAS;QAbrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,8EAAgB;gBAChB,oEAAY;gBACZ,gFAAc;aACf;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;yCAGU,8DAAM;YACJ,0EAAQ;OAHT,SAAS,CAYrB;IAAD,gBAAC;CAAA;AAZqB;;;;;;;;;;;ACvBQ;AAE9B,4TAAkB,gPAWjB,GAXc,mDAAG,MAWhB;;;;;;;;;;;;ACb4B;AAE9B,2JAAkB,+EAOhB,GAPa,mDAAG,MAOf;;;;;;;;;;ACTH;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../ClientApp/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/$$_lazy_route_resource lazy\n// module id = ../../../../../ClientApp/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.css\n// module id = ../../../../../ClientApp/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h3>\\r\\n    Clients\\r\\n  </h3>\\r\\n</div>\\r\\n\\r\\n<ul *ngFor=\\\"let entry of clients | async | select: 'clients'\\\" calss=\\\"mdl-list\\\">\\r\\n  <li class=\\\"mdl-list__item\\\">{{entry.clientName}}</li>\\r\\n</ul>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.html\n// module id = ../../../../../ClientApp/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Apollo } from 'apollo-angular';\r\nimport gql from 'graphql-tag';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport Client from '../models/client';\r\nimport QueryClientAndProduct from '../clientGraphql/gqlQueryClientAndProduct';\r\nimport QueryClients from '../clientGraphql/gqlQueryClients';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'app';\r\n  clients: Observable<any>;\r\n\r\n  constructor(private apollo: Apollo) { }\r\n\r\n  ngOnInit() {\r\n    this.clients = this.apollo.watchQuery({\r\n      query: QueryClients\r\n    }).valueChanges;\r\n\r\n    this.apollo.watchQuery({\r\n      query: QueryClientAndProduct,\r\n      variables: {\r\n        clientId: '1',\r\n        prodId: '1'\r\n      }\r\n    }).valueChanges\r\n      .subscribe(({ data }) => {\r\n        console.log(data);\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ApolloModule, Apollo } from 'apollo-angular';\r\nimport { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule, // provides HttpClient for HttpLink\r\n    ApolloModule,\r\n    HttpLinkModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { \r\n  constructor(\r\n    apollo: Apollo,\r\n    httpLink: HttpLink\r\n  ) {\r\n    apollo.create({\r\n      // By default, this client will send queries to the\r\n      // `/graphql` endpoint on the same host\r\n      link: httpLink.create({ uri: 'http://localhost:62001/graphql/' }),\r\n      cache: new InMemoryCache()\r\n    });\r\n  }  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.module.ts","import gql from 'graphql-tag';\r\n\r\nexport default gql`query queryClientAndProduct($clientId: String!, $prodId: String!) {\r\n      client(id: $clientId) {\r\n        clientName \r\n        products {\r\n          name\r\n        }\r\n      }, \r\n      product(id:$prodId) {\r\n        name\r\n      }\r\n    }\r\n`;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/clientGraphql/gqlQueryClientAndProduct.ts","import gql from 'graphql-tag';\r\n\r\nexport default gql`{\r\n  clients {\r\n    id\r\n    clientName\r\n    clientPassWord\r\n    email\r\n  }\r\n}`;\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/clientGraphql/gqlQueryClients.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/bingw/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/main.ts"],"sourceRoot":"webpack:///"}