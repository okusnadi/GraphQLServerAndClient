{"version":3,"sources":["D:/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/$_lazy_route_resource lazy","D:/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.css","D:/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.html","D:/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.ts","D:/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.module.ts","D:/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/environments/environment.ts","D:/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,+F;;;;;;;ACVA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,mJAAmJ,SAAS,yE;;;;;;;;;;;;;;;;;;;;;;ACA1G;AACV;AACV;AAE9B,IAAM,qBAAqB,uQAAM,gPAWhC,GAX6B,mDAAG,KAWhC,CAAC;AAOF;IAGE,sBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAFlC,UAAK,GAAG,KAAK,CAAC;IAEwB,CAAC;IAEvC,+BAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YACrB,KAAK,EAAE,qBAAqB;YAC5B,SAAS,EAAE;gBACT,QAAQ,EAAE,GAAG;gBACb,MAAM,EAAE,GAAG;aACZ;SACF,CAAC;aACD,YAAY;aACZ,SAAS,CAAC,UAAC,EAAQ;gBAAN,cAAI;YACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IAjBU,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAI4B,8DAAM;OAHvB,YAAY,CAkBxB;IAAD,mBAAC;CAAA;AAlBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBiC;AACjB;AACe;AACF;AACc;AACd;AAEP;AAgB/C;IACE,mBACE,MAAc,EACd,QAAkB;QAElB,MAAM,CAAC,MAAM,CAAC;YACZ,mDAAmD;YACnD,uCAAuC;YACvC,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,iCAAiC,EAAE,CAAC;YACjE,KAAK,EAAE,IAAI,4EAAa,EAAE;SAC3B,CAAC,CAAC;IACL,CAAC;IAXU,SAAS;QAbrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,8EAAgB;gBAChB,oEAAY;gBACZ,gFAAc;aACf;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;yCAGU,8DAAM;YACJ,0EAAQ;OAHT,SAAS,CAYrB;IAAD,gBAAC;CAAA;AAZqB;;;;;;;;;ACvBtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../ClientApp/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/$$_lazy_route_resource lazy\n// module id = ../../../../../ClientApp/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.css\n// module id = ../../../../../ClientApp/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n<h2>Here are some links to help you start: </h2>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.html\n// module id = ../../../../../ClientApp/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\n\nconst QueryClientAndProduct = gql`query queryClientAndProduct($clientId: String!, $prodId: String!) {\n      client(id: $clientId) {\n        clientName \n        products {\n          name\n        }\n      }, \n      product(id:$prodId) {\n        name\n      }\n    }\n`;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  constructor(private apollo: Apollo) { }\n\n  ngOnInit() {\n    this.apollo.watchQuery({\r\n      query: QueryClientAndProduct,\r\n      variables: {\n        clientId: '1',\r\n        prodId: '1'\r\n      }\n    })\n    .valueChanges\r\n    .subscribe(({ data }) => {\r\n        console.log(data);\r\n      });\n  }  \n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApolloModule, Apollo } from 'apollo-angular';\nimport { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule, // provides HttpClient for HttpLink\n    ApolloModule,\n    HttpLinkModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n  constructor(\n    apollo: Apollo,\n    httpLink: HttpLink\n  ) {\n    apollo.create({\n      // By default, this client will send queries to the\n      // `/graphql` endpoint on the same host\n      link: httpLink.create({ uri: 'http://localhost:62001/graphql/' }),\n      cache: new InMemoryCache()\n    });\n  }  \n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// D:/Documents/Visual Studio 2017/Projects/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/main.ts"],"sourceRoot":"webpack:///"}